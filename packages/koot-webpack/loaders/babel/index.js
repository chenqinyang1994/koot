module.exports = require("babel-loader").custom(babel => {
    // function myPlugin() {
    //     return {
    //         visitor: {},
    //     };
    // }

    return {
        // Passed the loader options.
        customOptions({ /*opt1, opt2,*/ ...loader }) {
            return {
                // Pull out any custom options that the loader might have.
                custom: { /*opt1, opt2*/ },

                // Pass the options back with the two custom options removed.
                loader,
            };
        },

        // Passed Babel's 'PartialConfig' object.
        config(cfg) {
            // if (cfg.hasFilesystemConfig()) {
            //     // Use the normal config
            //     return cfg.options;
            // }

            const { plugins, ...options } = cfg.options

            /** @type {Boolean} 已有的 plugin 中是否存在 `react-hot-loader/babel` */
            let hasRHL = false
            const newPlugins = plugins.filter(plugin => {
                if (typeof plugin.file === 'object' &&
                    /react-hot-loader(\/|\\)babel/.test(plugin.file.request)
                ) {
                    hasRHL = true
                    // 非开发模式下不应存在 RHL
                    if (process.env.WEBPACK_BUILD_ENV !== 'dev') {
                        return false
                    }
                }
                // console.log(plugin.file.request)
                return true
            })
            if (!hasRHL &&
                process.env.WEBPACK_BUILD_ENV === 'dev'
            ) {
                newPlugins.push(require('react-hot-loader/babel'))
            }

            // console.log('')
            // console.log({
            //     'plugin[].file': newPlugins.map(plugin => {
            //         return plugin.file.request
            //     })
            // })
            // console.log('')

            return {
                ...options,
                plugins: newPlugins,
            };
        },

        result(result) {
            return {
                ...result,
                // code: result.code + "\n// Generated by some custom loader",
            };
        },
    };
});
